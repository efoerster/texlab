import * as factory from '../factory';
import { CompletionProvider } from '../provider';
import { LatexArgumentCompletionProvider } from './argument';

export const LIBRARIES = [
  '3d',
  'angles',
  'arrows',
  'automata',
  'babel',
  'backgrounds',
  'bending',
  'calc',
  'calendar',
  'chains',
  'circuits',
  'circuits.ee',
  'circuits.ee.IEC',
  'circuits.logic.CDH',
  'circuits.logic',
  'circuits.logic.IEC',
  'circuits.logic.US',
  'datavisualization.3d',
  'datavisualization.barcharts',
  'datavisualization',
  'datavisualization.formats.functions',
  'datavisualization.polar',
  'datavisualization.sparklines',
  'decorations',
  'decorations.footprints',
  'decorations.fractals',
  'decorations.markings',
  'decorations.pathmorphing',
  'decorations.pathreplacing',
  'decorations.shapes',
  'decorations.text',
  'er',
  'fadings',
  'fit',
  'fixedpointarithmetic',
  'folding',
  'fpu',
  'graphs',
  'graphs.standard',
  'intersections',
  'lindenmayersystems',
  'math',
  'matrix',
  'mindmap',
  'patterns',
  'patterns.meta',
  'petri',
  'plothandlers',
  'plotmarks',
  'positioning',
  'quotes',
  'scopes',
  'shadings',
  'shadows',
  'shapes.arrows',
  'shapes.callouts',
  'shapes',
  'shapes.gates.logic.IEC',
  'shapes.gates.logic.US',
  'shapes.geometric',
  'shapes.misc',
  'shapes.multipart',
  'shapes.symbols',
  'snakes',
  'spy',
  'svg.path',
  'through',
  'topaths',
  'trees',
  'turtle',
];

const ITEMS = LIBRARIES.map(factory.createTikzLibrary);

export const LatexTikzLibraryCompletionProvider: CompletionProvider = LatexArgumentCompletionProvider(
  {
    commandNames: ['\\usetikzlibrary'],
    argumentIndex: 0,
    execute: async () => ITEMS,
  },
);
